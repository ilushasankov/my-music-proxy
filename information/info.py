from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import FSInputFile
import logging
import os
from download_functions import limitations
logger = logging.getLogger(__name__)
router = Router()

DEFAULT_TEXT = (
    "<b>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ë–û–¢–ï</b>\n\n"
    "–ò—â—É –∏ —Å–∫–∞—á–∏–≤–∞—é —Ç—Ä–µ–∫–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\n"
    "<blockquote>–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ª—É—á—à–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ–∑ –æ—à–∏–±–æ–∫. –ù–∞–ø—Ä–∏–º–µ—Ä, ¬´–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è - –ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω¬ªü§î</blockquote>\n\n"
    "üëæ<b>–õ–∏–º–∏—Ç—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
    "‚Ä¢ –° –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ @chedmemes: {base_limit} —Å–∫–∞—á–∏–≤–∞–Ω–∏–π –≤ —Å—É—Ç–∫–∏\n"
    "‚Ä¢ –° –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ @chedmemes –∏ @djilusha:  {premium_limit} —Å–∫–∞—á–∏–≤–∞–Ω–∏–π –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –æ—á–µ—Ä–µ–¥–∏!\n\n"
    "üí¨–î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –∏ –∂–∞–ª–æ–±: @ilushasankov_bot\n\n"
    "‚ú®<b>–ï—Å–ª–∏ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ—Ç, —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏–µ!</b>"
).format(
    base_limit=limitations.BASE_DOWNLOAD_LIMIT,
    premium_limit=limitations.PREMIUM_DOWNLOAD_LIMIT
)


ONAS_TEXT = (
            "<b>–ß–≠–î</b> ‚Äî –º–µ–º—ã, —Ä–µ—Ü–µ–Ω–∑–∏–∏, –æ–ø—Ä–æ—Å—ã, –Ω–æ–≤–æ—Å—Ç–∏ –∏ –¥—Ä—É–≥–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –º—É–∑—ã–∫–æ–π. <a href='https://telegra.ph/CHEHD-03-09'>–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—Å...</a>\n\n"
            "üåê<a href='https://t.me/ilushasankov_bot'>–†–µ–∫–ª–∞–º–∞</a> / <a href='https://t.me/addlist/bu98CQLVAiViZWJi'>–¥—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã</a>\n\n"
            "<b>–ù–ê–®–ò –†–ï–°–£–†–°–´&#128279</b>\n"
            "<a href='https://t.me/chedmemes'>Telegram</a> | "
            "<a href='https://youtube.com/@chedmemes'>YouTube</a> | "
            "<a href='https://www.twitch.tv/chedstreams'>Twitch</a> | "
            "<a href='https://discord.gg/8tvUERGqmk'>Discord</a>\n\n"
            "<b>–ë–ï–°–ï–î–´&#128172</b>\n"
            "<a href='https://t.me/chedmemeschat'>–ß–∞—Ç –≤ Telegram</a>\n\n"
            "<b>–†–ê–ó–ù–û–ï&#128171</b>\n"
            "<a href='https://t.me/addstickers/chedmemes'>–°—Ç–∏–∫–µ—Ä—ã</a> | "
            "<a href='https://t.me/addstickers/chedmemespack'>–≤–∏–¥–µ–æ—Å—Ç–∏–∫–µ—Ä—ã</a> | "
            "<a href='https://t.me/addemoji/chedmemesemoji'>—ç–º–æ–¥–∑–∏</a>\n\n"
            "<b>–ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–Ø&#128019</b>\n"
            "<a href='https://t.me/djilusha'>–°–æ–∑–¥–∞—Ç–µ–ª—å</a> | "
            "<a href='https://t.me/Jukedubz'>–∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å</a>"
)

def get_default_keyboard() -> types.InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="üêî–û –Ω–∞—Å", callback_data="info_show_onas"))
    builder.add(types.InlineKeyboardButton(text="‚ú®–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å", callback_data="donate"))
    return builder.as_markup()

def get_onas_keyboard() -> types.InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã '–û –Ω–∞—Å'."""
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="üîô–ù–∞–∑–∞–¥", callback_data="info_show_default"))
    builder.add(types.InlineKeyboardButton(text="‚ú®–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å", callback_data="donate"))
    return builder.as_markup()

@router.message(Command("info"))
async def info_handler(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /info –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."""
    try:
        # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ª–µ–∂–∏—Ç –ø–æ —ç—Ç–æ–º—É –ø—É—Ç–∏
        photo_path = "information/pictures/info_photo.png"
        photo = FSInputFile(photo_path)
        await message.answer_photo(
            photo=photo,
            caption=DEFAULT_TEXT,
            parse_mode="HTML",
            reply_markup=get_default_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è /info: {e}")
        # –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
        await message.answer(
            text=DEFAULT_TEXT,
            parse_mode="HTML",
            reply_markup=get_default_keyboard()
        )

@router.callback_query(lambda c: c.data == "info_show_onas")
async def show_onas_handler(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É '–û –Ω–∞—Å'."""
    try:
        await callback.message.edit_caption(
            caption=ONAS_TEXT,
            parse_mode="HTML",
            reply_markup=get_onas_keyboard()
        )
        await callback.answer()
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É '–û –Ω–∞—Å': {e}")
        await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã", show_alert=True)

@router.callback_query(lambda c: c.data == "info_show_default")
async def show_default_handler(callback: types.CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."""
    try:
        await callback.message.edit_caption(
            caption=DEFAULT_TEXT,
            parse_mode="HTML",
            reply_markup=get_default_keyboard()
        )
        await callback.answer()
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {e}")
        await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã", show_alert=True)